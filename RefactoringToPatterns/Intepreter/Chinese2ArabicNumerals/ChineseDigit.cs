using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Chinese2ArabicNumerals
{
    public class ChineseDigit
    {
        private static readonly Dictionary<string, string> mapping = new Dictionary<string, string>
                                                                         {
                                                                             {"零", "0"},
                                                                             {"一", "1"},
                                                                             {"二", "2"},
                                                                             {"三", "3"},
                                                                             {"四", "4"},
                                                                             {"五", "5"},
                                                                             {"六", "6"},
                                                                             {"七", "7"},
                                                                             {"八", "8"},
                                                                             {"九", "9"},
                                                                             {"十", "10"},
                                                                             {"百", "100"},
                                                                             {"千", "1000"},
                                                                             {"万", "10000"},
                                                                         };

        private readonly string Origin;
        private bool IsTenLeading;

        public ChineseDigit(string s)
        {
            Origin = s;
        }

        public string Transform()
        {
            var stringBuilder = new StringBuilder();
            var reverse = Origin.Reverse();

            foreach (var digit in reverse)
            {
                var key = digit.ToString();
                IsTenLeading = key == "十";

                var diffLen = mapping.Get(key).Length - stringBuilder.Length;
                var zeroCount = diffLen - 1;
                switch (key)
                {
                    case "万":
                        UnshiftZero(stringBuilder, zeroCount);
                        break;
                    case "千":
                        UnshiftZero(stringBuilder, zeroCount);
                        break;
                    case "百":
                        UnshiftZero(stringBuilder, zeroCount);
                        break;
                    case "十":
                        UnshiftZero(stringBuilder, zeroCount);
                        break;
                    default:
                        stringBuilder.Insert(0, mapping.Get(key));
                        break;
                }
            }

            if (IsTenLeading)
            {
                stringBuilder.Insert(0, 1);
            }
            return stringBuilder.ToString();
        }

        private static void UnshiftZero(StringBuilder stringBuilder, int zeroCount)
        {
            stringBuilder.Insert(0, mapping.Get("零"), zeroCount);
        }
    }


}